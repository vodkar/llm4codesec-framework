{
    "experiment_metadata": {
        "name": "VulnerabilityDetection Benchmark LLM Evaluation",
        "description": "Comprehensive evaluation of LLMs on VulnerabilityDetection benchmark with multiple vulnerability types and prompt strategies",
        "version": "1.0",
        "dataset": "VulnerabilityDetection v1.0",
        "created_date": "2025-06-17"
    },
    "dataset_configurations": {
        "sql_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_sql.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "sql",
            "description": "SQL injection vulnerability detection"
        },
        "xss_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_xss.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "xss",
            "description": "Cross-site scripting (XSS) vulnerability detection"
        },
        "command_injection_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_command_injection.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "command_injection",
            "description": "Command injection vulnerability detection"
        },
        "xsrf_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_xsrf.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "xsrf",
            "description": "Cross-site request forgery (XSRF) vulnerability detection"
        },
        "path_disclosure_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_path_disclosure.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "path_disclosure",
            "description": "Path disclosure vulnerability detection"
        },
        "open_redirect_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_open_redirect.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "open_redirect",
            "description": "Open redirect vulnerability detection"
        },
        "remote_code_execution_vulnerabilities": {
            "dataset_path": "datasets_processed/vulnerabilitydetection/vulnerabilitydetection_remote_code_execution.json",
            "task_type": "binary_vulnerability",
            "vulnerability_type": "remote_code_execution",
            "description": "Remote code execution vulnerability detection"
        }
    },
    "prompt_strategies": {
        "basic_security": {
            "name": "Basic Security Analysis",
            "system_prompt": "You are an expert security analyst specializing in static code analysis. Your task is to analyze code snippets and determine if they contain security vulnerabilities.\n\nInstructions:\n- Analyze the provided code carefully\n- Consider common vulnerability patterns (injection, buffer overflow, race conditions, etc.)\n- Respond with only \"VULNERABLE\" or \"SAFE\" - no additional explanation\n- Base your decision on concrete security risks, not coding style issues",
            "user_prompt": "Analyze this code for security vulnerabilities:\n\n{code}"
        },
        "token_aware_security": {
            "name": "Token-Aware Security Analysis",
            "system_prompt": "You are an expert security analyst with deep knowledge of token-level vulnerability patterns. Your task is to analyze code snippets for security vulnerabilities, paying special attention to dangerous function calls, user input handling, and data flow patterns.\n\nInstructions:\n- Examine each token and statement for potential security issues\n- Look for patterns like unvalidated input, unsafe function calls, improper sanitization\n- Consider the context and flow of data through the code\n- Respond with only \"VULNERABLE\" or \"SAFE\" - no additional explanation\n- Focus on actual exploitable vulnerabilities, not theoretical issues",
            "user_prompt": "Perform token-level security analysis on this code:\n\n{code}"
        },
        "vulnerability_specific": {
            "name": "Vulnerability-Specific Analysis",
            "system_prompt": "You are a security expert specializing in identifying specific types of vulnerabilities in code. Your analysis should focus on detecting the target vulnerability type while considering the broader security context.\n\nInstructions:\n- Analyze the code for the presence of security vulnerabilities\n- Pay particular attention to input validation, output encoding, and secure coding practices\n- Consider both direct and indirect vulnerability patterns\n- Respond with only \"VULNERABLE\" or \"SAFE\" - no additional explanation\n- Base your assessment on exploitability and real-world attack scenarios",
            "user_prompt": "Analyze this code for security vulnerabilities:\n\n{code}"
        },
        "context_aware_security": {
            "name": "Context-Aware Security Analysis",
            "system_prompt": "You are an expert security analyst with extensive experience in real-world vulnerability assessment. Your task is to analyze code snippets in context, understanding both the immediate security implications and the broader attack surface.\n\nInstructions:\n- Analyze the code considering its likely deployment context\n- Look for vulnerability patterns that could be exploited in practice\n- Consider the interaction between different code elements\n- Focus on vulnerabilities that pose genuine security risks\n- Respond with only \"VULNERABLE\" or \"SAFE\" - no additional explanation",
            "user_prompt": "Perform context-aware security analysis on this code:\n\n{code}"
        },
        "detailed_security": {
            "name": "Detailed Security Analysis",
            "system_prompt": "You are a senior security researcher with expertise in static analysis and vulnerability detection. Your role is to perform comprehensive security analysis of code snippets, identifying both obvious and subtle security issues.\n\nInstructions:\n- Conduct thorough analysis of all code elements\n- Identify potential attack vectors and exploitation paths\n- Consider the severity and exploitability of any issues found\n- Focus on real-world security implications\n- Respond with only \"VULNERABLE\" or \"SAFE\" - no additional explanation\n- Prioritize high-confidence assessments based on clear evidence",
            "user_prompt": "Conduct detailed security analysis of this code:\n\n{code}"
        }
    },
    "model_configurations": {
        "qwen3-4b": {
            "model_name": "Qwen/Qwen3-4B",
            "model_type": "QWEN",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 30,
            "use_quantization": true
        },
        "qwen3-4b-thinking": {
            "model_name": "Qwen/Qwen3-4B",
            "model_type": "QWEN",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 30,
            "use_quantization": true,
            "enable_thinking": true
        },
        "qwen3-8b": {
            "model_name": "Qwen/Qwen3-8B",
            "model_type": "QWEN",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 15,
            "use_quantization": true
        },
        "qwen3-8b-thinking": {
            "model_name": "Qwen/Qwen3-8B",
            "model_type": "QWEN",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 15,
            "use_quantization": true,
            "enable_thinking": true
        },
        "qwen3-30b": {
            "model_name": "Qwen/Qwen3-30B-A3B",
            "model_type": "QWEN",
            "batch_size": 2,
            "max_tokens": 2048,
            "temperature": 0.1,
            "use_quantization": true,
            "enable_thinking": false
        },
        "qwen3-30b-thinking": {
            "model_name": "Qwen/Qwen3-30B-A3B",
            "model_type": "QWEN",
            "batch_size": 2,
            "max_tokens": 2048,
            "temperature": 0.1,
            "use_quantization": true,
            "enabile_thinking": true
        },
        "deepseek-coder-v2-lite-16b": {
            "model_name": "deepseek-ai/DeepSeek-Coder-V2-Lite-Instruct",
            "model_type": "DEEPSEEK",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 2,
            "use_quantization": true
        },
        "deepseek-r1-distill-qwen2.5-7b": {
            "model_name": "deepseek-ai/DeepSeek-R1-Distill-Qwen-7B",
            "model_type": "DEEPSEEK",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 30,
            "use_quantization": true
        },
        "deepseek-r1-distill-qwen2.5-32b": {
            "model_name": "deepseek-ai/DeepSeek-R1-Distill-Qwen-32B",
            "model_type": "DEEPSEEK",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 2,
            "use_quantization": true
        },
        "wizard-coder-34b": {
            "model_name": "WizardLMTeam/WizardCoder-33B-V1.1",
            "model_type": "WIZARD",
            "max_tokens": 2048,
            "temperature": 0.1,
            "batch_size": 2,
            "use_quantization": true
        },
        "llama3.2-3B": {
            "model_name": "meta-llama/Llama-3.2-3B-Instruct",
            "model_type": "LLAMA",
            "max_tokens": 1024,
            "temperature": 0.1,
            "batch_size": 15,
            "use_quantization": true
        },
        "llama4-scout-17b-16e": {
            "model_name": "meta-llama/Llama-4-Scout-17B-16E-Instruct",
            "model_type": "LLAMA",
            "max_tokens": 1024,
            "temperature": 0.1,
            "batch_size": 2,
            "use_quantization": true
        },
        "gemma3-4b": {
            "model_name": "google/gemma-3-4b-it-qat-q4_0-unquantized",
            "model_type": "GEMMA",
            "max_tokens": 1024,
            "temperature": 0.1,
            "batch_size": 40,
            "use_quantization": true
        },
        "gemma3-27b": {
            "model_name": "google/gemma-3-27b-it",
            "model_type": "GEMMA",
            "max_tokens": 1024,
            "temperature": 0.1,
            "batch_size": 2,
            "use_quantization": true
        }
    },
    "experiment_plans": {
        "quick_test": {
            "description": "Quick test with small sample for validation",
            "models": [
                "qwen3-4b"
            ],
            "datasets": [
                "sql_vulnerabilities",
                "xss_vulnerabilities"
            ],
            "prompts": [
                "basic_security"
            ],
            "sample_limit": 10
        },
        "small_models_binary": {
            "description": "Evaluation of small models on all datasets with basic prompts",
            "models": [
                "qwen3-4b",
                "qwen3-4b-thinking",
                "qwen3-8b",
                "qwen3-8b-thinking",
                "llama3.2-3B",
                "gemma3-4b",
                "deepseek-r1-distill-qwen2.5-7b"
            ],
            "datasets": [
                "sql_vulnerabilities",
                "xss_vulnerabilities",
                "command_injection_vulnerabilities",
                "xsrf_vulnerabilities",
                "path_disclosure_vulnerabilities",
                "open_redirect_vulnerabilities",
                "remote_code_execution_vulnerabilities"
            ],
            "prompts": [
                "vulnerability_specific"
            ],
            "sample_limit": 50
        },
        "large_models": {
            "description": "Evaluation of large models with advanced prompts",
            "models": [
                "qwen3-30b",
                "qwen3-30b-thinking",
                "deepseek-coder-v2-lite-16b",
                "deepseek-r1-distill-qwen2.5-32b",
                "wizard-coder-34b",
                "llama4-scout-17b-16e",
                "gemma3-27b"
            ],
            "datasets": [
                "path_disclosure_vulnerabilities",
                "open_redirect_vulnerabilities",
                "remote_code_execution_vulnerabilities"
            ],
            "prompts": [
                "vulnerability_specific"
            ]
        }
    }
}